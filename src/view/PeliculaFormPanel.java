package view;

import java.awt.*;
import java.text.DecimalFormat;
import java.time.Year;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import model.Genero;

/**
 * Panel de formulario para ingreso de datos de películas
 * 
 * Responsabilidades:
 * - Proporcionar campos para ingreso de datos de películas
 * - Validar formato de entrada (año, duración)
 * - Gestionar el layout del formulario
 * - Proporcionar acceso a los datos ingresados
 * - Ofrecer funcionalidad de limpieza del formulario
 * 
 * Características:
 * - Validación visual de campos
 * - Spinners con rangos predefinidos
 * - ComboBox con géneros predefinidos
 * - Botones de acción (Guardar, Limpiar)
 * 
 */

public class PeliculaFormPanel extends JPanel {
    
    // Componentes del formulario
    private final JTextField txtTitulo = new JTextField();
    private final JTextField txtDirector = new JTextField();
    private final JSpinner spAnio;
    private final JSpinner spDuracion;
    private final JComboBox<String> cbGenero = new JComboBox<>(Genero.names());
    private final JButton btnGuardar = new JButton("Guardar");
    private final JButton btnLimpiar = new JButton("Limpiar");
    
    /**
     * Constructor del panel de formulario
     * 
     * Inicializa:
     * - Layout y bordes del panel
     * - Spinners con valores por defecto y rangos válidos
     * - Formateo de números (sin separadores de miles)
     * - Listeners de eventos
     * 
     */
    public PeliculaFormPanel() {
        initComponents();
        
        setLayout(new BorderLayout(8,8));
        setBorder(new EmptyBorder(16, 18, 16, 18));

        // Configurar spinner de año con rango válido
        int anioMax = Year.now().getValue() + 1;
        spAnio     = new JSpinner(new SpinnerNumberModel(2024, 1900, anioMax, 1));
        
        // quitar separador de miles y cualquier decimal
        JSpinner.NumberEditor edAnio = new JSpinner.NumberEditor(spAnio, "#"); // patrón entero
        spAnio.setEditor(edAnio);
        DecimalFormat f = edAnio.getFormat();
        f.setGroupingUsed(false);        // sin miles (ej. 2026, no 2,026)
        f.setMaximumFractionDigits(0);   // sin decimales
        
        // Configurar spinner de duración
        spDuracion = new JSpinner(new SpinnerNumberModel(90, 1, 999, 1));

        // Crear panel de formulario con grid layout
        JPanel form = new JPanel(new GridLayout(0,2,8,8));
        form.add(new JLabel("Título:")); form.add(txtTitulo);
        form.add(new JLabel("Director:")); form.add(txtDirector);
        form.add(new JLabel("Año:")); form.add(spAnio);
        form.add(new JLabel("Duración (min):")); form.add(spDuracion);
        form.add(new JLabel("Género:")); form.add(cbGenero);

        // Panel de botones de acción
        JPanel actions = new JPanel(new FlowLayout(FlowLayout.RIGHT));
        actions.add(btnLimpiar);
        actions.add(btnGuardar);

        // Agregar componentes al panel principal
        add(form, BorderLayout.CENTER);
        add(actions, BorderLayout.SOUTH);

        // Configurar listener para botón limpiar
        btnLimpiar.addActionListener(e -> clear());
    }
    
    /**
     * @return String Título ingresado
     */
    public String getTitulo()   { return txtTitulo.getText().trim(); }
    
    /**
     * @return String Director ingresado
     */
    public String getDirector() { return txtDirector.getText().trim(); }
    
    /**
     * @return int Año seleccionado
     */
    public int    getAnio()     { return (int) spAnio.getValue(); }
    
    /**
     * @return int Duración seleccionada
     */
    public int    getDuracion() { return (int) spDuracion.getValue(); }
    
    /**
     * @return String Género seleccionado
     */
    public String getGenero()   { return (String) cbGenero.getSelectedItem(); }

    /**
     * @return JButton Botón de guardar
     */
    public JButton getBtnGuardar() { return btnGuardar; }

    /**
     * Limpia todos los campos del formulario y restablece valores por defecto
     * 
     * Acciones:
     * - Limpia campos de texto
     * - Restablece spinners a valores por defecto
     * - Selecciona primer elemento del combo box
     * - Enfoca el campo de título para nueva entrada
     * 
     */
    public void clear() {
        txtTitulo.setText("");
        txtDirector.setText("");
        spAnio.setValue(2024);
        spDuracion.setValue(90);
        cbGenero.setSelectedIndex(0);
        txtTitulo.requestFocus();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
